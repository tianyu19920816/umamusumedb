---
import { Search, Menu, X, Github } from 'lucide-react';
---

<header class="sticky top-0 z-50 glass">
  <nav class="container mx-auto px-3 sm:px-4 py-3 sm:py-4">
    <div class="flex items-center justify-between gap-2">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-2 sm:space-x-3 group flex-shrink-0">
        <img src="/logo.svg" alt="UmamusumeDB" class="w-8 h-8 sm:w-10 sm:h-10 group-hover:animate-bounce" />
        <span class="font-display text-lg sm:text-2xl gradient-text hidden xs:inline">UmamusumeDB</span>
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-6">
        <a href="/tools/" class="font-medium hover:text-uma-primary transition-colors whitespace-nowrap">
          Tools
        </a>
        <a href="/characters/" class="font-medium hover:text-uma-primary transition-colors whitespace-nowrap">
          Characters
        </a>
        <a href="/cards/" class="font-medium hover:text-uma-primary transition-colors whitespace-nowrap">
          Support Cards
        </a>
        <a href="/tier-list/" class="font-medium hover:text-uma-primary transition-colors whitespace-nowrap">
          Tier List
        </a>
      </div>

      <!-- Actions -->
      <div class="flex items-center gap-2 sm:gap-3">
        <!-- Search Button -->
        <button id="search-btn" class="p-2 hover:bg-uma-primary/10 rounded-lg transition-colors flex-shrink-0 group relative" aria-label="Search">
          <Search class="w-4 h-4 sm:w-5 sm:h-5" />
          <span class="hidden lg:block absolute -bottom-8 left-1/2 -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none">
            ⌘K / Ctrl+K
          </span>
        </button>

        <!-- GitHub Link - Desktop -->
        <a href="https://github.com/tianyu19920816/umamusumedb" target="_blank" rel="noopener noreferrer"
           class="hidden lg:flex items-center gap-1 px-3 py-1.5 rounded-lg border border-uma-primary/20 bg-white/50 text-sm hover:bg-uma-primary/10 transition-colors whitespace-nowrap">
          <Github class="w-4 h-4" />
          <span>GitHub</span>
        </a>

        <!-- Language Switcher - Desktop -->
        <div class="hidden lg:flex items-center gap-2">
          <a href="/" class="px-3 py-1.5 rounded-lg border border-uma-primary/20 bg-white/50 text-sm hover:bg-uma-primary/10 transition-colors whitespace-nowrap">
            EN
          </a>
          <a href="/ja/" class="px-3 py-1.5 rounded-lg border border-uma-primary/20 bg-white/50 text-sm hover:bg-uma-primary/10 transition-colors whitespace-nowrap">
            日本語
          </a>
        </div>

        <!-- Mobile Menu Button -->
        <button id="mobile-menu-btn" class="lg:hidden p-2 hover:bg-uma-primary/10 rounded-lg transition-colors flex-shrink-0" aria-label="Toggle menu">
          <Menu id="menu-icon" class="w-5 h-5" />
          <X id="close-icon" class="w-5 h-5 hidden" />
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden lg:hidden mt-4 pt-4 border-t border-uma-primary/20 animate-fadeIn">
      <div class="flex flex-col space-y-3">
        <a href="/tools/" class="font-medium hover:text-uma-primary transition-colors py-2 px-2 rounded-lg hover:bg-uma-primary/5">
          Tools
        </a>
        <a href="/characters/" class="font-medium hover:text-uma-primary transition-colors py-2 px-2 rounded-lg hover:bg-uma-primary/5">
          Characters
        </a>
        <a href="/cards/" class="font-medium hover:text-uma-primary transition-colors py-2 px-2 rounded-lg hover:bg-uma-primary/5">
          Support Cards
        </a>
        <a href="/tier-list/" class="font-medium hover:text-uma-primary transition-colors py-2 px-2 rounded-lg hover:bg-uma-primary/5">
          Tier List
        </a>

        <!-- Divider -->
        <div class="border-t border-uma-primary/10 my-2"></div>

        <a href="https://github.com/tianyu19920816/umamusumedb" target="_blank" rel="noopener noreferrer"
           class="flex items-center gap-2 font-medium hover:text-uma-primary transition-colors py-2 px-2 rounded-lg hover:bg-uma-primary/5">
          <Github class="w-4 h-4" />
          <span>GitHub</span>
        </a>

        <!-- Language Switcher -->
        <div class="flex gap-2 pt-2">
          <a href="/" class="flex-1 px-3 py-2.5 rounded-lg border border-uma-primary/20 bg-white/50 text-center hover:bg-uma-primary/10 transition-colors font-medium">
            English
          </a>
          <a href="/ja/" class="flex-1 px-3 py-2.5 rounded-lg border border-uma-primary/20 bg-white/50 text-center hover:bg-uma-primary/10 transition-colors font-medium">
            日本語
          </a>
        </div>
      </div>
    </div>

    <!-- Search Modal -->
    <div id="search-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="container mx-auto px-4 py-8 sm:py-16">
        <div class="max-w-3xl mx-auto">
          <!-- Search Box -->
          <div class="glass rounded-2xl p-4 sm:p-6 mb-4">
            <div class="relative">
              <Search className="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 sm:w-6 sm:h-6 text-gray-400" />
              <input
                type="text"
                id="global-search-input"
                placeholder="Search characters, cards, or tools..."
                class="w-full pl-12 sm:pl-14 pr-4 py-3 sm:py-4 text-base sm:text-lg rounded-xl border-2 border-uma-primary/20 bg-white/90 focus:outline-none focus:border-uma-primary"
                autofocus
              />
              <button id="close-search" class="absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600">
                <X className="w-5 h-5 sm:w-6 sm:h-6" />
              </button>
            </div>
            <div class="text-xs sm:text-sm text-gray-500 mt-2 px-1">
              Press <kbd class="px-2 py-1 bg-gray-100 rounded text-xs">ESC</kbd> to close
            </div>
          </div>

          <!-- Search Results -->
          <div id="search-results" class="glass rounded-2xl p-4 sm:p-6 max-h-[60vh] overflow-y-auto">
            <div id="search-empty" class="text-center py-8 text-gray-500">
              Start typing to search...
            </div>
            <div id="search-content" class="hidden space-y-4"></div>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeIn {
    animation: fadeIn 0.2s ease-out;
  }

  /* Extra small breakpoint for very small screens */
  @media (min-width: 375px) {
    .xs\:inline {
      display: inline;
    }
  }
</style>

<script>
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  mobileMenuBtn?.addEventListener('click', () => {
    const isHidden = mobileMenu?.classList.toggle('hidden');
    menuIcon?.classList.toggle('hidden', !isHidden);
    closeIcon?.classList.toggle('hidden', isHidden);
  });

  // Close mobile menu when clicking on a link
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!mobileMenuBtn?.contains(e.target as Node) && !mobileMenu?.contains(e.target as Node)) {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    }
  });

  // Search functionality
  const searchBtn = document.getElementById('search-btn');
  const searchModal = document.getElementById('search-modal');
  const closeSearchBtn = document.getElementById('close-search');
  const searchInput = document.getElementById('global-search-input') as HTMLInputElement;
  const searchEmpty = document.getElementById('search-empty');
  const searchContent = document.getElementById('search-content');

  // Close search modal
  const closeSearch = () => {
    searchModal?.classList.add('hidden');
    if (searchInput) searchInput.value = '';
    searchEmpty?.classList.remove('hidden');
    searchContent?.classList.add('hidden');
  };

  closeSearchBtn?.addEventListener('click', closeSearch);

  // Close on ESC key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !searchModal?.classList.contains('hidden')) {
      closeSearch();
    }
  });

  // Close when clicking outside
  searchModal?.addEventListener('click', (e) => {
    if (e.target === searchModal) {
      closeSearch();
    }
  });

  // Search data
  let searchData: any[] = [];
  let isLoading = false;

  // Load search data
  async function loadSearchData() {
    if (isLoading || searchData.length > 20) return;
    isLoading = true;

    try {
      // Try to fetch pre-generated search data
      const response = await fetch('/search-data.json');
      if (response.ok) {
        const data = await response.json();
        searchData = [
          ...(data.pages || []),
          ...(data.tools || []),
          ...(data.characters || []),
          ...(data.cards || [])
        ];
        console.log(`✅ Loaded ${searchData.length} searchable items from cache`);
        return;
      }
    } catch (e) {
      console.warn('Could not load search-data.json, using fallback');
    }

    try {
      // Fallback: dynamically import static content
      const { characters, supportCards } = await import('@/lib/static-content.ts');

      searchData = [
        { name_en: 'Characters', type: 'page', url: '/characters/' },
        { name_en: 'Support Cards', type: 'page', url: '/cards/' },
        { name_en: 'Tier List', type: 'page', url: '/tier-list/' },
        { name_en: 'Tools', type: 'page', url: '/tools/' },
        { name_en: 'Factor Calculator', type: 'tool', url: '/tools/factor-calculator/' },
        { name_en: 'Training Calculator', type: 'tool', url: '/tools/training-calculator/' },
        { name_en: 'Support Deck Builder', type: 'tool', url: '/tools/support-deck/' },
        { name_en: 'Training Goals', type: 'tool', url: '/tools/training-goals/' },
        { name_en: 'Skill Builder', type: 'tool', url: '/tools/skill-builder/' },
        ...characters.map((c: any) => ({
          id: c.id,
          name_en: c.name_en,
          name_ja: c.name_ja,
          type: 'character',
          rarity: c.rarity
        })),
        ...supportCards.map((c: any) => ({
          id: c.id,
          name_en: c.name_en,
          name_ja: c.name_ja,
          type: 'card',
          rarity: c.rarity,
          cardType: c.type
        }))
      ];

      console.log(`✅ Loaded ${searchData.length} searchable items dynamically`);
    } catch (error) {
      console.error('❌ Failed to load search data:', error);
      // Ultimate fallback
      searchData = [
        { name_en: 'Characters', type: 'page', url: '/characters/' },
        { name_en: 'Support Cards', type: 'page', url: '/cards/' },
        { name_en: 'Tier List', type: 'page', url: '/tier-list/' },
        { name_en: 'Tools', type: 'page', url: '/tools/' },
      ];
    } finally {
      isLoading = false;
    }
  }

  // Load data when search is opened
  searchBtn?.addEventListener('click', () => {
    searchModal?.classList.remove('hidden');
    setTimeout(() => searchInput?.focus(), 100);
    if (searchData.length < 20) {
      loadSearchData();
    }
  });

  // Perform search
  searchInput?.addEventListener('input', (e) => {
    const query = (e.target as HTMLInputElement).value.toLowerCase().trim();

    if (!query) {
      searchEmpty?.classList.remove('hidden');
      searchContent?.classList.add('hidden');
      return;
    }

    const results = searchData.filter(item =>
      item.name_en?.toLowerCase().includes(query) ||
      item.name_ja?.toLowerCase().includes(query)
    ).slice(0, 10);

    if (results.length === 0) {
      searchEmpty!.textContent = 'No results found';
      searchEmpty?.classList.remove('hidden');
      searchContent?.classList.add('hidden');
      return;
    }

    searchEmpty?.classList.add('hidden');
    searchContent?.classList.remove('hidden');

    searchContent!.innerHTML = results.map(item => {
      const url = item.url || (item.type === 'character' ? `/characters/${item.id}` : `/cards/${item.id}`);

      let badge = '📄';
      let badgeColor = 'bg-gray-100';

      if (item.type === 'character') {
        badge = '👤';
        badgeColor = 'bg-pink-100';
      } else if (item.type === 'card') {
        badge = '🎴';
        badgeColor = 'bg-purple-100';
      } else if (item.type === 'tool') {
        badge = '🛠️';
        badgeColor = 'bg-blue-100';
      } else if (item.type === 'page') {
        badge = '📑';
        badgeColor = 'bg-green-100';
      }

      return `
        <a href="${url}" class="block p-3 sm:p-4 bg-white rounded-lg hover:shadow-lg transition-all hover:scale-[1.02]">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 ${badgeColor} rounded-lg flex items-center justify-center text-xl flex-shrink-0">
              ${badge}
            </div>
            <div class="flex-1 min-w-0">
              <div class="font-semibold text-gray-900 truncate">${item.name_en}</div>
              ${item.name_ja ? `<div class="text-sm text-gray-500 truncate">${item.name_ja}</div>` : ''}
            </div>
            <div class="text-xs text-gray-400 uppercase px-2 py-1 bg-gray-50 rounded flex-shrink-0">${item.type}</div>
          </div>
        </a>
      `;
    }).join('');
  });

  // Keyboard navigation (Ctrl+K / Cmd+K)
  document.addEventListener('keydown', (e) => {
    if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
      e.preventDefault();
      searchBtn?.click();
    }
  });
</script>